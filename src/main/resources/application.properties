spring.datasource.url=jdbc:postgresql://192.168.88.103:5432/iqtest
spring.datasource.username=postgres
spring.datasource.password=server
hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.properties.hibernate.jdbc.time_zone=Europe/Bucharest

#security.ignored=/**
spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

spring.security.user.name=victor
spring.security.user.password=test

server.port=8443
# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=certs/romarg/iqtest.caido.ro.p12
# The password used to generate the certificate
server.ssl.key-store-password=Qedu123#
# The alias mapped to the certificate
server.ssl.key-alias=1
server.ssl.enabled=true
#trust store location
trust.store=certs/romarg/iqtest.caido.ro.p12
#trust store password
trust.store.password=Qedu123#

spring.devtools.restart.enabled=true
spring.mvc.async.request-timeout=60000

# application.properties

# OAuth 2.0 Client Configuration
#spring.security.oauth2.client.registration.custom.client-id=your-client-id
#spring.security.oauth2.client.registration.custom.client-secret=your-client-secret
#spring.security.oauth2.client.registration.custom.redirect-uri=http://localhost:3000/login/oauth2/code/custom
#spring.security.oauth2.client.registration.custom.client-name=YourClientName
#spring.security.oauth2.client.provider.custom.authorization-uri=https://your-authorization-server.com/oauth/authorize
#spring.security.oauth2.client.provider.custom.token-uri=https://your-authorization-server.com/oauth/token
#spring.security.oauth2.client.provider.custom.user-info-uri=https://your-authorization-server.com/oauth/userinfo
#spring.security.oauth2.client.provider.custom.user-name-attribute=username
